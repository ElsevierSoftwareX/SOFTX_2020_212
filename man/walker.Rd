% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/walker.R
\name{walker}
\alias{walker}
\title{Fully Bayesian linear regression with time-varying coefficients}
\usage{
walker(formula, data, beta_prior, sigma_prior, naive = FALSE,
  return_x_reg = FALSE, ...)
}
\arguments{
\item{formula}{An object of class \link{\code{"formula"}}. See \link{code{"lm"}} for details.}

\item{data}{An optional data.frame or object coercible to such, as in \link{code{"lm"}}.}

\item{beta_prior}{A matrix with \eqn{k} rows and 2 columns, where first columns defines the 
prior means of the Gaussian priors of the corresponding \eqn{k} regression coefficients, 
and the second column defines the the standard deviations of those prior distributions.}

\item{sigma_prior}{A matrix with \eqn{k + 1} rows and two colums with similar structure as 
\code{beta_prior}, with first row corresponding to the prior of the standard deviation of the 
observation level noise, and rest of the rows define the priors for the standard deviations of 
random walk noise terms. The prior distributions for all sigmas are 
Gaussians truncated to positive real axis.}

\item{naive}{If \code{TRUE}, use "standard" approach which samples the joint posterior 
\eqn{p(beta, sigma | y)}. If \code{FALSE} (the default), use marginalisation approach 
where we sample the marginal posterior \eqn{p(sigma | y)} and generate the samples of 
\eqn{p(beta | sigma, y)} using state space modelling techniques 
(namely simulation smoother by Durbin and Koopman (2002)). Both methods give asymptotically 
identical results, but the latter approach is computationally much more efficient.}
}
\description{
Function \code{walker} performs Bayesian inference of a linear 
regression model with time-varying regression coefficients, 
i.e. ordinary regression model where instead of constant coefficients the 
coefficients follow random walks. All computations are done using Hamiltonian 
Monte Carlo provided by Stan, using a state space representation of the model 
in order to marginalise over the coefficients for efficient sampling.
}
